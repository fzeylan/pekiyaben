@using Emoda.PekiYaBen.Entity.Enums
@using Emoda.PekiYaBen.Entity.Helpers

@section styles{
    <link rel="stylesheet" type="text/css" href="~/Scripts/DataTables/datatables.min.css">
}

<table class="table table-striped" cellspacing="0" style="width: 100%" id="users">
    <thead>
        <tr>
            <th>Koç</th>
            <th>Koçluk Tipi</th>
            <th>Müşteri</th>
            <th>Randevu Tarihi</th>
            <th>Satın Alma Tarihi</th>
            <th>Fiyatı</th>
            <th>Platform</th>
            <th>Durum</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
@section scripts {
    <script type="text/javascript">
        var statusList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(EnumerationExtensions.ToList2<General.CoachInterviewStatus>()));
        var interviewPaymentTypeList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(EnumerationExtensions.ToList2<General.InterviewPaymentType>()));
        
        function FindInList(list, property, value) {
            var filtered = list.filter(function (list) { return eval("list." + property) == value });
            if (filtered)
                return filtered[0];
            else
                return null;
        }
    </script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.21/b-1.6.2/cr-1.5.2/fc-3.3.1/fh-3.1.7/sc-2.0.2/sl-1.3.1/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs/dt-1.10.21/b-1.6.2/cr-1.5.2/fc-3.3.1/fh-3.1.7/sc-2.0.2/sl-1.3.1/datatables.min.js"></script>
    <script type="text/javascript">
        var table;
        $(function () {
            // end example, if posted successful, can apply to datatables.net below
            table = $('#users').DataTable(
                {

					scrollX: true,
					responsive: true,
                    fixedHeader: true,
                    iDisplayLength: 100,
                    sPaginationType: "full_numbers",
                    processing: true,
                    serverSide: true,
                    "language": {
                        "url": "/Scripts/DataTables/tr.json"
                    },
                    "lengthMenu": [
                        [10, 25, 50, 100, 500, 1000],
                        [10, 25, 50, 100, 500, 1000]
                    ], //key-value
                    "paging": true,
                    "ordering": true,
                    "order": [[3, "desc"]],
                    "info": true,
                    ajax: {
                        type: "POST",
                        contentType: "application/json",
                        url: '@Url.Action("GetInterviews", "Coach")',
                        data: function (d) {
                            return JSON.stringify(d);
                        },
                        dataFilter: function (res) {
                            return res;
                        },
                        error: function (x, y) {
                            console.log(x);

                        }
                    },
                    "columns": [
                        //{
                        //    "data": "ProfilePhoto",
                        //    "sType": "string",
                        //    render: function (data, type, full, meta) {
                        //        if (data !== "" && data !== null)
                        //            return "<a href='/Coach/Edit/" + full.Id + "'><img src='" + data + "' class='profile-user-img' /></a>";
                        //    }
                        //},
                        {
                            "data": "CoachName",
                            "sType": "string"
                        },
                        {
                            "data": "InterviewType",
                            "sType": "string"
                        },
                        {
                            "data": "UserName",
                            "sType": "string"
                        },
                        {
                            "data": "AvailableDate",
                            "sType": "date",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null && data !='01.01.0001')
                                    return moment(data).format('DD.MM.YYYY HH:mm');
                                return "";
                            }
                        },
                        {
                            "data": "TransactionDate",
                            "sType": "date",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null && data !='01.01.0001')
                                    return moment(data).format('DD.MM.YYYY HH:mm');
                                return "";
                            }
                        },
                        {
                            "data": "TransactionPrice",
                            "sType": "string",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null && data != '01.01.0001')
                                    return parseFloat(data).toFixed(2) + " TL";
                                return "";
                            }
                        },
                        {
                            "data": "MarketId",
                            "sType": "string",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null)
                                    return FindInList(interviewPaymentTypeList, "Key", data).Value;
                                return ""; msts
                            }
                        },
                        {
                            "data": "Status",
                            "sType": "string",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null)
                                    return FindInList(statusList, "Key", data).Value;
                                return "";msts
                            }
                        }

                    ]
                });
        });
    </script>
}
