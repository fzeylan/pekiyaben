@using Emoda.PekiYaBen.Entity.Enums
@using Emoda.PekiYaBen.Entity.Helpers
@model int

@section styles{
    <link rel="stylesheet" type="text/css" href="~/Scripts/DataTables/datatables.min.css">
}
<div class="col-12">
    <a href="/Content/Edit/?id=0&type=@Model" class="btn btn-danger btn-sm"><i class="glyphicon-plus"></i> Yeni @((General.ContentType)Model) Ekle</a><br /><br />
</div>
<table class="table table-striped" cellspacing="0" style="width: 100%" id="users">
    <thead>
        <tr>
            <th></th>
            <th>Başlık</th>
            <th>Özet</th>
            <th>Kategori</th>
            <th>Durum</th>
            <th>Eklenme Tarihi</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
@section scripts {
    <script type="text/javascript">
        var statusList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(EnumerationExtensions.ToList2<General.Status>()));
        var typeList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(EnumerationExtensions.ToList2<General.ContentType>()));
        function FindInList(list, property, value) {
            var filtered = list.filter(function (list) { return eval("list." + property) == value });
            if (filtered)
                return filtered[0];
            else
                return null;
        }
    </script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.21/b-1.6.2/cr-1.5.2/fc-3.3.1/fh-3.1.7/sc-2.0.2/sl-1.3.1/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs/dt-1.10.21/b-1.6.2/cr-1.5.2/fc-3.3.1/fh-3.1.7/sc-2.0.2/sl-1.3.1/datatables.min.js"></script>
    <script type="text/javascript">
        var table;
        $(function () {
            table = $('#users').DataTable(
                {
					scrollX: true,
					responsive: true,
                    fixedHeader: true,
                    iDisplayLength: 100,
                    processing: true,
                    serverSide: true,
                    filter:false,
                    language: {
                        url: "/Scripts/DataTables/tr.json"
                    },
                    lengthMenu: [
                        [10, 25, 50, 100, 500, 1000],
                        [10, 25, 50, 100, 500, 1000]
                    ], //key-value
                    paging: true,
                    ordering: true,
                    order: [[5, "desc"]],
                    info: true,
                    ajax: {
                        type: "POST",
                        contentType: "application/json",
                        url: '@Url.Action("GetContent", "Content")',
                        data: function (d) {
                            d.type=@Model;
                            return JSON.stringify(d);
                        },
                        dataFilter: function (res) {
                            return res;
                        },
                        error: function (x, y) {
                            console.log(x);
                        }
                    },
                    columns: [
                        {
                            "data": "Image",
                            "sType": "string",
                            sortable:false,
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null)
                                    return "<img src='" + data + "' class='profile-user-img' />";

                                return "";
                            }
                        },
                        {
                            data: "Title",
                            sType: "string",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null)
                                    return "<a href='/Content/Edit/" + full.Id + "'>" + data + "</a>";
                            }
                        },
                        {
                            data: "Summary",
                            sType: "string",

                        },
                        {
                            data: "Category",
                            sType: "string",

                        },
                        {
                            data: "Status",
                            sType: "string",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null)
                                    return FindInList(statusList, "Key", data).Value;
                                return "";
                            }
                        },
                        {
                            "data": "CreateDate",
                            "sType": "date",
                            render: function (data, type, full, meta) {
                                if (data !== "" && data !== null && data != '01.01.0001')
                                    return moment(data).format('DD.MM.YYYY HH:mm');
                                return "";
                            }
                        }
                    ]
                });
        });
    </script>
}
